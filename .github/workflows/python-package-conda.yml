name: IDX Keepalive
on:
  schedule:
    # Run keepalive every 5
    - cron: '*/5 * * * *'
  # Manual trigger option for testing
  workflow_dispatch:

jobs:
  keepalive:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Download Google Cookies
      run: |
      curl -s -L "${{ secrets.COOK_URL }}" -o google_cookies.json
      if [ -f google_cookies.json ]; then
        echo "Successfully downloaded google_cookies.json"
      else
        echo "Error: Failed to download google_cookies.json"
      fi
      
    - name: Restore cookies cache
      id: cache-cookies
      uses: actions/cache/restore@v3
      with:
        path: google_cookies.json
        key: google_cookies-v1
        restore-keys: |
          google_cookies-
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Restore pip cache
      id: cache-pip
      uses: actions/cache/restore@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Restore Playwright cache
      id: cache-playwright
      uses: actions/cache/restore@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.version') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
          
    - name: Create playwright.version file if not exists
      run: |
        if [ ! -f "playwright.version" ]; then
          playwright_version=$(pip show playwright 2>/dev/null | grep Version | cut -d ' ' -f 2 || echo "1.34.0")
          echo "$playwright_version" > playwright.version
        fi
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install from requirements.txt if it exists
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install playwright
        fi
        # Only install Playwright browsers if cache doesn't exist
        if [ "${{ steps.cache-playwright.outputs.cache-hit }}" != 'true' ]; then
          echo "Installing Playwright browsers..."
          python -m playwright install firefox
        else
          echo "Using cached Playwright browsers"
        fi
      

    - name: Check WEB_URL Status
      id: check_url_status
      run: |
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "${{ secrets.WEB_URL }}")
        echo "status=$HTTP_STATUS" >> $GITHUB_OUTPUT
        echo "WEB_URL status code: $HTTP_STATUS"

    - name: Run Python Script on Non-200 Status
      if: steps.check_url_status.outputs.status != '200'
      env:
        GOOGLE_PW: ${{ secrets.GOOGLE_PW }}
        APP_URL: ${{ secrets.APP_URL }}
      run: |
        # Run the script
        python main.py
        
    - name: Save cookies cache
      uses: actions/cache/save@v3
      with:
        path: google_cookies.json
        key: google_cookies-v1
        
    - name: Save pip cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        
    - name: Save Playwright cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.version') }}        
